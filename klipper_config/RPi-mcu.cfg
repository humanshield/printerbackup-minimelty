[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: rpi

##########################################
####    ADXL for resonance-testing    ####
##########################################

[adxl345]
cs_pin: rpi:None
#cs_pin: PA8
#spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
	60,50,25


#[temperature_sensor enclosure_temp]
#sensor_type: HTU21D
#i2c_address: 64
#   Default is 64 (0x40).
#i2c_mcu: rpi
#i2c_bus: i2c.1
#i2c_speed:
#   See the "common I2C settings" section for a description of the
#   above parameters.
#htu21d_hold_master: False
#   If the sensor can hold the I2C buf while reading. If True no other
#   bus communication can be performed while reading is in progress.
#   Default is False.
#htu21d_resolution:
#   The resolution of temperature and humidity reading.
#   Valid values are:
#    'TEMP14_HUM12' -> 14bit for Temp and 12bit for humidity
#    'TEMP13_HUM10' -> 13bit for Temp and 10bit for humidity
#    'TEMP12_HUM08' -> 12bit for Temp and 08bit for humidity
#    'TEMP11_HUM11' -> 11bit for Temp and 11bit for humidity
#   Default is: "TEMP11_HUM11"
#htu21d_report_time:
#   Interval in seconds between readings. Default is 30

#[gcode_macro QUERY_HTU21D]
#gcode:
#    {% set sensor = printer["htu21d my_sensor"] %}
#    {action_respond_info(
#        "Temperature: %.2f C\n"
#        "Humidity: %.2f%%" % (
#            sensor.temperature,
#            sensor.humidity))}
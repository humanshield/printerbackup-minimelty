[delayed_gcode delayed_fan_cooldown]
initial_duration: 0
gcode:    
  #{% if (printer.chamber_temp.temperature > 45 ) %}
  #  UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=300  # reset/re-run the delay (300=5min)
  #{% else %}    # shutdown fans
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0 # turn off nevermore
  #{% endif %} 

[gcode_macro timed_cool_down]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0.8   # Turn on Nevermore
  UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=900

[gcode_macro cooldown_off]
gcode:
  UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=0    # shut-down the loop
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0 # turn off nevermore

  # SDCard 'looping' (aka Marlin M808 commands) support
#
# Support SDCard looping
[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro stealth_mode]
gcode:
    SET_VELOCITY_LIMIT ACCEL=3000
    SET_VELOCITY_LIMIT VELOCITY=800

[gcode_macro speed_mode]
gcode:
    #{% set ACCEL_SETTINGS = printer.configfile.settings['printer accel']|float %}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    SET_VELOCITY_LIMIT VELOCITY=900
    

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}



[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    # Set new default parameters
    {% set BED = params.BED|default(90)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(250)|float %}
    {% set EXTRUDER_STANDBY = params.EXTRUDER_STANDBY|default(170)|float %}
    # Clear Any Paused State
    CLEAR_PAUSE
    UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=0
	  # Clear Display
	  M117
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.85
    # Start heating nozzle, heat bed
    M104 S{EXTRUDER_STANDBY}
    M190 S{BED}
    G4 S150      # Wait in seconds
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28                            ; home all axes
    SMART_PARK                     ; move nozzle away from bed
    # finish heating nozzle
    M109 S{EXTRUDER}
    # purge before print, no skirt needed
    LINE_PURGE
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-11 F3600                 ; retract filament

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 10) %}
        {% set x_safe = 10.0 %}
    {% else %}
        {% set x_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 10) %}
        {% set y_safe = 10.0 %}
    {% else %}
        {% set y_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}


    G91
    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing    
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G1 X{max_x - 10} Y{max_y - 10} F3600          ; park nozzle at rear
    # Disable steppers
    M84
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
    UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=300

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: BASE_PAUSE
gcode:
  {% set E = params.E|default(3.0)|float %}
  ##### set park positon for x and y #####
  {% set x_park = params.x_park|default(70)|float %}
  {% set y_park = params.y_park|default(0)|float %}
  {% set xy_speed = params.xy_speed|default(30000)|float %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 15.0) %}
      {% set z_safe = 15.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F{xy_speed}
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].E|default(3.0)|float %}
  G91
  G1 E{E} F5000
  RESTORE_GCODE_STATE NAME=PAUSE_state
  RESUME_BASE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### read E from pause macro #####
  #{% set xy_speed = printer["gcode_macro PAUSE"].xy_speed|float %}
  M106 S0       # Turn off part-fan
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  {% if printer.toolhead.position.z < (max_z - 10) %}
    G91
    G0 Z10 F3600  
  {% else %}
    G90
    G0 Z{max_z} F3600
  {% endif %}
  # Do an un-retract
  G92 E0
  G1 E-11 F5000
  # Park nozzle, Cancel_Position
  TURN_OFF_HEATERS
  G90
  G1 X5 Y115 F30000
  CANCEL_PRINT_BASE
  M84           # Turn off steppers
  SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
  UPDATE_DELAYED_GCODE ID=delayed_fan_cooldown DURATION=900

[gcode_macro speed_test]
description: help test for machine's max speed (in mm/s)
gcode:
  {% set SPEED = params.SPEED|default(50)|float %}
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}

  G0 x5 y5 z35 F3000
  G0 f{SPEED * 60}
  G0 y{max_y - 5}
  G0 x{max_x -5}
  G0 y5
  G0 x5
  G0 x{max_x - 5} y{max_y - 5}
  G0 x5
  G0 x{max_x - 5} y5
  G0 x5 y5

[gcode_macro M900]
description: Marlin-style PressureAdvance adjustment
gcode: 
  {% set K = params.K|default(0)|float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}
	
[gcode_macro RETRACTION_TEST_CONFIG]
#default_parameter_FACTOR: 0.005     # Depreciated
gcode:
    {% set FACTOR = params.FACTOR|default(0.005)|float %}     # Direct=0.005 Bowden=0.050
    M117 Retraction Factor={FACTOR}
    TUNING_TOWER COMMAND=SET_RETRACTION PARAMETER=RETRACT_LENGTH START=0 FACTOR={FACTOR}

[gcode_macro PRESSURE_ADVANCE_TEST_CONFIG]
#default_parameter_FACTOR: 0.005     # Depreciated
gcode:
    {% set FACTOR = params.FACTOR|default(0.005)|float %}     # Direct=0.005 Bowden=0.020
    M117 Pressure Adv Factor={FACTOR}
    # SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    SET_VELOCITY_LIMIT     SQUARE_CORNER_VELOCITY=1 ACCEL=500 ACCEL_TO_DECEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR={FACTOR}